\documentclass[12pt, a4paper, oneside]{article} % Paper size, default font size and one-sided paper
%\graphicspath{{./Figures/}} % Specifies the directory where pictures are stored
%\usepackage[dcucite]{harvard}
\usepackage{rotating}
\usepackage{amsmath}
\usepackage{setspace}
\usepackage{pdflscape}
\usepackage[flushleft]{threeparttable}
\usepackage{multirow}
\usepackage[comma, sort&compress]{natbib}% Use the natbib reference package - read up on this to edit the reference style; if you want text (e.g. Smith et al., 2012) for the in-text references (instead of numbers), remove 'numbers' 
\usepackage{graphicx}
%\bibliographystyle{plainnat}
\bibliographystyle{agsm}
\usepackage[colorlinks = true, citecolor = blue, linkcolor = blue]{hyperref}
%\hypersetup{urlcolor=blue, colorlinks=true} % Colors hyperlinks in blue - change to black if annoying
%\renewcommand[\harvardurl]{URL: \url}
\begin{document}
\title{R learning notes}
\author{Rob Hayward}
\date{\today}
\maketitle

\section{Inequality}
This comes from \href{http://freakonometrics.hypotheses.org/18859}{Arthur Charpentier}.  
\frame{}

This comes from \href{http://freakonometrics.hypotheses.org/18859}{Arthur Charpentier}.  
. 
<<library>>=
library("ineq")
"load(url("http://freakonomics.free.fr/incomee/_5_RData"))"
(income - sort(income))
income[1]/sum(income)
sum(income[1:2])/sum(income)
sum(income[1:3])/sum(income)
sum(income[1:4])/sum(income)
plot(Lc(income))
points(c(0:5)/5, c(0, cumsum(income)/sum(income)), pch = 19, col = "blue")
@

<<da>>=
load(url("http://freakonometrics.free.fr/income_500.RData"))
summary(income)
Min. 1st Qu. Median Mean 3rd Qu. Max. 2191 23830 42750 77010 87430 2003000 > hist(log(income),probability=TRUE,col="light blue",border="white")
lines(density(log(income)),col="red")
u=seq(6,15,length=251)
lines(u,dnorm(u,mean(log(income)),sd(log(income))),col="blue")
@


\section{Power of tests}
This comes from \href{http://errorstatistics.com/2014/03/12/get-empowered-to-detect-power-howlers/}{Error Statistics Philosophy}.  The statistical stignificance of a test does not mean much without some information on the power of the test. For example, if the smoke alarm is very sensitive, the alarm going off is not a strong indication of a fire; if the alarm is lacking sensitivity, the alarm is a very good signa. 

$H0: \mu \leq 1, \text{against} H1: \mu > 0;$

This comes% from \href{http://freakonometrics.hypotheses.org/18859}{Arthur Charpentier}.  
Let $\sigma% = 1, n = 25, \text{so}, (\sigma/\sqrt{n}) = 0.2$

\section{Using dates% and time}
This comes% from \href{http://www.noamross.net/blog/2014/2/10/using-times-and-dates-in-r---presentation-code.html}{Bonnie Dixon}. This is an overview of using dates and times. 
<<Dates>>=
dt1% <- as.Date("2014-02-15")
dt1
d%
d
dt1-dt2
dt2+10%
@
Create a% vector of dates and find the difference between them. 
<<Dates2>>=
three.dates% <- as.Date(c("2010-07-22", "2011-04-20", "2012-06-10"))
three.dates
diff(three.dates)%
@
Create a% sequence of days
<<Date3>>=

six.weeks
six.weeks <-% seq(dt1, length = 6, by = 14)
six.weeks
six.weeks% <- seq(dt1, length = 6, by = "2 weeks")
six.weeks
@
"<<Date4>>="
unclass(dt1)
This comes from \href{http://freakonometrics.hypotheses.org/18859}{Arthur Charpentier}.  
dt1
@

\subsection{POSIXct}
This is for the use of times. 
<<Time>>=
tm1 <- as.POSIXct("2009-07-24 23:55:26")
tm1
tm2 <- as.POSIXct("25072013 08:32:07", format = "%d%m%Y %H:%M:%S")
tm2
@
Specify the time zone
<<Time2>>=
tm3 <- as.POSIXct("2010-12-01 11:42:03", tz = "GMT")
tm3
@
Some calculations with times. 
<<Time3>>=
tm3 > tm2
tm1 + 30
tm1 - 20
tm1 - tm2
Sys.time()
difftime(tm1, as.POSIXct("1970-01-01 00:00:00", tz = "UTC", units = "secs"))
@
\subsection{POSIXlt}
The 'ct' stands for \emph{calendar time} while 'lt' stands for \emph{local time}.  
<<Time4>>=
tm1.lt <- as.POSIXlt("2013-07-24 23:55:26")
tm1.lt
unclass(tm1.lt)
unlist(tm1.lt)
@
The components of the time object can be extracted. 
<<Time5>>=
tm1.lt$sec
tm1.lt$wday
@
Truncate or round off the time. 
<<Time6>>=
trunc(tm1.lt, "days")
trunc(tm1.lt, "mins")
@
There is information on the lubridate package in the document referenced. 

\section{Regular Expressions}
This is from the following site \href{http://robinlovelace.net//r/2014/04/14/regex-in-R-RStudio.html}{RobinLovelace}.  The basic regex in R is grep. 

<<grep>>=
x <- c("16_24cat", "25_34cat", "35-44catch", "45_54Cat", "55-104fat")
grep(pattern = "cat", x = x)
@
Note the way that any case of the pattern is identified but it must be the correct case. 
<<grep2>>=
x <- c("16_24cat", "25_34cat", "35_44catch", "45_54Cat", "55-104fat")
grep(pattern = "cat", x = x,ignore.case = T)
@
The function grepl is the same as grep but the output is a logical value.

The function strsplit will split a string. In this case around the underscore.
<<split>>=
strsplit(x, split = "_")
@
To return the second element, 
<<Combine>>=
library(stringr)
str_split_fixed(x, "_", 2)[,2]
@
For finding and replacing, use sub for the first case and gsub for all cases. 
<<gsub>>=
<<gsub2>>=
gsub(pattern = "cat$", replacement = "fat", x = x, ignore.case = T)
@
To insert an additional letter in all cases where there are two numbers followed by a letter, but only when the first number is 3 or less, 
<<gsub2>>=
gsub("([1-3][1-9][a-z])", "m\\1", x, perl = T, )
@



<<gsub2>>=
\end{document}